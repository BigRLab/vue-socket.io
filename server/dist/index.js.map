{"version":3,"sources":["../src/index.js"],"names":["app","require","debug","http","config","port","normalizePort","process","env","PORT","default","project_port","set","server","createServer","listen","on","onError","onListening","val","parseInt","isNaN","error","syscall","bind","code","console","exit","addr","address","log"],"mappings":";;AAEA;;;;AAIA,IAAIA,MAAMC,QAAQ,UAAR,CAAV;AACA,IAAIC,QAAQD,QAAQ,OAAR,EAAiB,UAAjB,CAAZ;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,IAAIG,SAASH,QAAQ,mBAAR,CAAb;AACA;AACA;;;;AAIA,IAAII,OAAOC,cAAcC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBL,OAAOM,OAAP,CAAeC,YAAjD,CAAX;AACAX,IAAIY,GAAJ,CAAQ,MAAR,EAAgBP,IAAhB;;AAEA;;;;AAIA,IAAIQ,SAASV,KAAKW,YAAL,CAAkBd,GAAlB,CAAb;;AAEA;;;;AAIAa,OAAOE,MAAP,CAAcV,IAAd;AACAQ,OAAOG,EAAP,CAAU,OAAV,EAAmBC,OAAnB;AACAJ,OAAOG,EAAP,CAAU,WAAV,EAAuBE,WAAvB;;AAEA;;;;AAIA,SAASZ,aAAT,CAAuBa,GAAvB,EAA4B;AAC1B,MAAId,OAAOe,SAASD,GAAT,EAAc,EAAd,CAAX;;AAEA,MAAIE,MAAMhB,IAAN,CAAJ,EAAiB;AACf;AACA,WAAOc,GAAP;AACD;;AAED,MAAId,QAAQ,CAAZ,EAAe;AACb;AACA,WAAOA,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAED;;;;AAIA,SAASY,OAAT,CAAiBK,KAAjB,EAAwB;AACtB,MAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMD,KAAN;AACD;;AAED,MAAIE,OAAO,OAAOnB,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,IAFd;;AAIA;AACA,UAAQiB,MAAMG,IAAd;AACE,SAAK,QAAL;AACEC,cAAQJ,KAAR,CAAcE,OAAO,+BAArB;AACAjB,cAAQoB,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACED,cAAQJ,KAAR,CAAcE,OAAO,oBAArB;AACAjB,cAAQoB,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAML,KAAN;AAVJ;AAYD;;AAED;;;;AAIA,SAASJ,WAAT,GAAuB;AACrB,MAAIU,OAAOf,OAAOgB,OAAP,EAAX;AACA,MAAIL,OAAO,OAAOI,IAAP,KAAgB,QAAhB,GACP,UAAUA,IADH,GAEP,UAAUA,KAAKvB,IAFnB;AAGAH,QAAM,kBAAkBsB,IAAxB;AACAE,UAAQI,GAAR,CAAY,UAAUzB,IAAtB;AACD","file":"index.js","sourcesContent":["\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar app = require('./app.js');\r\nvar debug = require('debug')('a:server');\r\nvar http = require('http');\r\nvar config = require('./config/index.js');\r\n// import config from './config/index.js';\r\n/**\r\n * Get port from environment and store in Express.\r\n */\r\n\r\nvar port = normalizePort(process.env.PORT || config.default.project_port);\r\napp.set('port', port);\r\n\r\n/**\r\n * Create HTTP server.\r\n */\r\n\r\nvar server = http.createServer(app);\r\n\r\n/**\r\n * Listen on provided port, on all network interfaces.\r\n */\r\n\r\nserver.listen(port);\r\nserver.on('error', onError);\r\nserver.on('listening', onListening);\r\n\r\n/**\r\n * Normalize a port into a number, string, or false.\r\n */\r\n\r\nfunction normalizePort(val) {\r\n  var port = parseInt(val, 10);\r\n\r\n  if (isNaN(port)) {\r\n    // named pipe\r\n    return val;\r\n  }\r\n\r\n  if (port >= 0) {\r\n    // port number\r\n    return port;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Event listener for HTTP server \"error\" event.\r\n */\r\n\r\nfunction onError(error) {\r\n  if (error.syscall !== 'listen') {\r\n    throw error;\r\n  }\r\n\r\n  var bind = typeof port === 'string'\r\n    ? 'Pipe ' + port\r\n    : 'Port ' + port;\r\n\r\n  // handle specific listen errors with friendly messages\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      console.error(bind + ' requires elevated privileges');\r\n      process.exit(1);\r\n      break;\r\n    case 'EADDRINUSE':\r\n      console.error(bind + ' is already in use');\r\n      process.exit(1);\r\n      break;\r\n    default:\r\n      throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Event listener for HTTP server \"listening\" event.\r\n */\r\n\r\nfunction onListening() {\r\n  var addr = server.address();\r\n  var bind = typeof addr === 'string'\r\n    ? 'pipe ' + addr\r\n    : 'port ' + addr.port;\r\n  debug('Listening on ' + bind);\r\n  console.log('监听端口：' + port);\r\n}\r\n"]}