{"version":3,"sources":["../../src/servers/chat_room_async.js"],"names":["socketMap","loginFunc","socket","obj","username","password","findOne","result","console","log","send","code","message","data","userId","id","passport","avatar","emit","broadcast","user","loginAndgetUserInfoFunc","messageFunc","fromId","toId","messageId","messageType","type","robot_id","content","group_id","err","disconnectFunc","k","userListFunc","key"],"mappings":"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","file":"chat_room_async.js","sourcesContent":["import User from '../model/user.js';\r\nimport config from '../config/index.js';\r\nimport chatRobot from './chat_robot.js';\r\n\r\n\r\n/*\r\nsocketMap = {\r\n    socket: socket,\r\n    user: {},\r\n    message: {}\r\n}     \r\n*/\r\nlet socketMap = {};\r\n\r\nexport const loginFunc = async (socket, obj) => {\r\n    let username = obj.username;\r\n    let password = obj.password;\r\n    try {\r\n        let result = await User.findOne({username});\r\n        console.log(JSON.stringify(result));\r\n        if (result) {\r\n            if (result.password === password) {\r\n                let send = {\r\n                    code: 200, \r\n                    message: '登录成功', \r\n                    data: {userId: result.id, username: result.username, passport: result.passport, avatar: result.avatar}\r\n                };\r\n                socket.emit('login', send);\r\n                socket.broadcast.emit('online', send);\r\n                socketMap[result.id] = {\r\n                    socket: socket,\r\n                    user: result,\r\n                    message: {}\r\n                };\r\n                console.log(result.username + ' 登录成功');\r\n            } else {\r\n                socket.emit('login', {\r\n                    code: 300, \r\n                    message: '账号或密码输入错误', \r\n                    data: {}\r\n                });\r\n            }\r\n        } else {\r\n            socket.emit('login', {\r\n                code: 300, \r\n                message: '账号或密码输入错误', \r\n                data: {}\r\n            });\r\n        }\r\n    } catch (err) {\r\n        socket.emit('login', {\r\n            code: 300, \r\n            message: '啊哦，出错喽，请重试', \r\n            data: err\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n/*\r\ncode \r\n    200: success\r\n    300: error \r\n    301: 身份信息验证已过期，请重新登陆，需跳转登录页\r\n*/\r\nexport const loginAndgetUserInfoFunc = async (socket, obj) => {\r\n    let userId = obj.userId;\r\n    let passport = obj.passport;\r\n    try {\r\n        let result = await User.findOne({id: userId});\r\n        if (result) {\r\n            if (result.passport === passport) {\r\n                let send = {\r\n                    code: 200, \r\n                    message: '自动登录成功', \r\n                    data: {userId: result.id, username: result.username, passport: result.passport, avatar: result.avatar}\r\n                };\r\n                socket.emit('auto-login', send);\r\n                socket.broadcast.emit('online', send);\r\n                socketMap[result.id] = {\r\n                    socket: socket,\r\n                    user: result,\r\n                    message: {}\r\n                };\r\n                console.log(result.username + ' 自动登录成功');\r\n            } else {\r\n                socket.emit('auto-login', {\r\n                    code: 301, \r\n                    message: '身份信息已过期，请重新登录', \r\n                    data: {}\r\n                });\r\n            }\r\n        } else {\r\n            socket.emit('auto-login', {\r\n                code: 301, \r\n                message: '账号或密码错误，请重新登录', \r\n                data: {}\r\n            });\r\n        }\r\n    } catch (err) {\r\n        socket.emit('auto-login', {\r\n            code: 300, \r\n            message: '啊哦，出错喽，请重试', \r\n            data: err\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n/*\r\n\r\n*/\r\nexport const messageFunc = async (socket, obj) => {\r\n    let fromId = obj.fromId;\r\n    let toId = obj.toId;\r\n    let message = obj.message;\r\n    let messageId = obj.messageId;\r\n    let messageType = obj.messageType;\r\n    try {\r\n        if (socketMap[toId]) {\r\n            console.log('这条消息是 ' + fromId + ' 发送给 ' + toId + ' 的');\r\n            socketMap[toId].socket.emit('message', {\r\n                code: 200,\r\n                message: '发送消息成功',\r\n                data: {\r\n                    fromId: toId,\r\n                    toId: fromId,\r\n                    message,\r\n                    type: 2,\r\n                    messageType\r\n                }\r\n            });\r\n            socket.emit('message-success', {\r\n                code: 200,\r\n                message: '发送成功',\r\n                messageId,\r\n                data: {}\r\n            });\r\n        } else if (toId - 0 === config.robot_id) {\r\n            chatRobot(message, (result) => {\r\n                socket.emit('message', {\r\n                    code: 200,\r\n                    message: '发送消息成功',\r\n                    data: {\r\n                        fromId,\r\n                        toId,\r\n                        message: result.content,\r\n                        type: 2,\r\n                        messageType\r\n                    }\r\n                });\r\n            });\r\n        } else if (toId - 0 === config.group_id) {\r\n            socket.broadcast.emit('message', {\r\n                code: 200,\r\n                message: '发送消息成功',\r\n                data: {\r\n                    user: {\r\n                        userId: socketMap[fromId].user.id,\r\n                        username: socketMap[fromId].user.username,\r\n                        avatar: socketMap[fromId].user.avatar\r\n                    },\r\n                    message,\r\n                    type: 2,\r\n                    messageType\r\n                }\r\n            });\r\n        } else {\r\n            console.log('148行 出错了');\r\n        }\r\n    } catch (err) {\r\n        socket.emit('message', {\r\n            code: 300, \r\n            message: '啊哦，出错喽，请重试', \r\n            data: err\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\n/*\r\n\r\n*/\r\nexport const disconnectFunc = async (socket) => {\r\n    for (var k in socketMap) {\r\n        if (socketMap[k].socket === socket) {\r\n            console.log(socketMap[k].user.username + ' 退出');\r\n            socket.broadcast.emit('logout', {\r\n                username: socketMap[k].user.username,\r\n                userId: socketMap[k].user.id\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\n/*\r\n\r\n*/\r\nexport const userListFunc = async (socket) => {\r\n    let result = {};\r\n    for (let key in socketMap) {\r\n        result[key] = {\r\n            username: socketMap[key].user.username,\r\n            userId: socketMap[key].user.id,\r\n            avatar: socketMap[key].user.avatar\r\n        };\r\n    }\r\n    try {\r\n        socket.emit('user-list', {\r\n            code: 200,\r\n            message: '获取在线用户列表成功',\r\n            data: result\r\n        });\r\n    } catch (err) {\r\n        socket.emit('user-list', {\r\n            code: 300, \r\n            message: '啊哦，出错喽，请重试', \r\n            data: err\r\n        });\r\n    }\r\n};\r\n"]}